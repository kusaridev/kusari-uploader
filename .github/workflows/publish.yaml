name: publish
on:
  workflow_dispatch: # testing only, trigger manually to test it works
  push:
    branches:
    - main
    tags:
      - 'v*'
permissions:
  contents: write # To upload assets to release
  packages: write # To publish container images to GHCR
  # id-token: write # To use GitHub OIDC for AWS auth to publish to ECR
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: '1.25.3'
        check-latest: true

    - uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9

    - name: run ko build and publish image
      run: |
        ko build --bare \
          --platform=linux/amd64,linux/arm64 \
          --tags=latest,sha.${{ github.sha }}

    - name: run ko build and publish image
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        ko build --bare \
          --platform=linux/amd64,linux/arm64 \
          --tags=latest,sha.${{ github.sha }},${{ github.ref_name }}

    - name: Install syft
      uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0

    - name: Run GoReleaser Snapshot
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      id: run-goreleaser-snapshot
      uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
      with:
        distribution: goreleaser
        version: latest
        args: release --clean --snapshot --skip=sign
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GORELEASER_CURRENT_TAG: v0.0.0-snapshot-tag
        DOCKER_CONTEXT: default

    - name: Run GoReleaser Release
      if: startsWith(github.ref, 'refs/tags/')
      id: run-goreleaser-release
      uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
      with:
        distribution: goreleaser
        version: latest
        args: 'release --clean'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
